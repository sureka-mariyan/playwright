/**
 * createBdd() definition.
 */
import { BuiltInFixtures, BuiltInFixturesWorker, CustomFixtures, KeyValue } from '../playwright/types';
import { TestType } from '@playwright/test';
import { BddWorld } from '../run/bddWorld';
import { CucumberStyleStepFn } from './cucumberStyle';
import { PlaywrightStyleStepFn } from './playwrightStyle';
export declare let hasCustomTest: boolean;
type CreateBddOptions<WorldFixtureName> = {
    worldFixture?: WorldFixtureName;
};
export declare function createBdd<T extends KeyValue = BuiltInFixtures, W extends KeyValue = BuiltInFixturesWorker, CustomWorld extends BddWorld = BddWorld, WorldFixtureName extends keyof CustomFixtures<T> | '' = ''>(customTest?: TestType<T, W> | null, options?: CreateBddOptions<WorldFixtureName> | (new (...args: any[]) => CustomWorld)): {
    Given: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? (pattern: import("@cucumber/cucumber/lib/support_code_library_builder/types").DefineStepPattern, fn: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CucumberStyleStepFn<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld> : PlaywrightStyleStepFn<T, W>) => WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CucumberStyleStepFn<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld> : PlaywrightStyleStepFn<T, W> : (pattern: import("@cucumber/cucumber/lib/support_code_library_builder/types").DefineStepPattern, fn: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CucumberStyleStepFn<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld> : PlaywrightStyleStepFn<T, W>) => (fixtures: Partial<Parameters<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CucumberStyleStepFn<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld> : PlaywrightStyleStepFn<T, W>>[0]>, ...args: import("../utils/types").ParametersExceptFirst<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CucumberStyleStepFn<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld> : PlaywrightStyleStepFn<T, W>>) => unknown;
    When: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? (pattern: import("@cucumber/cucumber/lib/support_code_library_builder/types").DefineStepPattern, fn: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CucumberStyleStepFn<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld> : PlaywrightStyleStepFn<T, W>) => WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CucumberStyleStepFn<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld> : PlaywrightStyleStepFn<T, W> : (pattern: import("@cucumber/cucumber/lib/support_code_library_builder/types").DefineStepPattern, fn: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CucumberStyleStepFn<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld> : PlaywrightStyleStepFn<T, W>) => (fixtures: Partial<Parameters<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CucumberStyleStepFn<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld> : PlaywrightStyleStepFn<T, W>>[0]>, ...args: import("../utils/types").ParametersExceptFirst<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CucumberStyleStepFn<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld> : PlaywrightStyleStepFn<T, W>>) => unknown;
    Then: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? (pattern: import("@cucumber/cucumber/lib/support_code_library_builder/types").DefineStepPattern, fn: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CucumberStyleStepFn<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld> : PlaywrightStyleStepFn<T, W>) => WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CucumberStyleStepFn<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld> : PlaywrightStyleStepFn<T, W> : (pattern: import("@cucumber/cucumber/lib/support_code_library_builder/types").DefineStepPattern, fn: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CucumberStyleStepFn<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld> : PlaywrightStyleStepFn<T, W>) => (fixtures: Partial<Parameters<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CucumberStyleStepFn<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld> : PlaywrightStyleStepFn<T, W>>[0]>, ...args: import("../utils/types").ParametersExceptFirst<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CucumberStyleStepFn<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld> : PlaywrightStyleStepFn<T, W>>) => unknown;
    Step: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? (pattern: import("@cucumber/cucumber/lib/support_code_library_builder/types").DefineStepPattern, fn: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CucumberStyleStepFn<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld> : PlaywrightStyleStepFn<T, W>) => WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CucumberStyleStepFn<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld> : PlaywrightStyleStepFn<T, W> : (pattern: import("@cucumber/cucumber/lib/support_code_library_builder/types").DefineStepPattern, fn: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CucumberStyleStepFn<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld> : PlaywrightStyleStepFn<T, W>) => (fixtures: Partial<Parameters<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CucumberStyleStepFn<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld> : PlaywrightStyleStepFn<T, W>>[0]>, ...args: import("../utils/types").ParametersExceptFirst<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CucumberStyleStepFn<WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld> : PlaywrightStyleStepFn<T, W>>) => unknown;
    Before: (...args: [(this: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld, fixtures: T & W & {
        $bddWorld: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld;
        $tags: string[];
        $testInfo: import("@playwright/test").TestInfo;
    }) => unknown] | [string, (this: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld, fixtures: T & W & {
        $bddWorld: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld;
        $tags: string[];
        $testInfo: import("@playwright/test").TestInfo;
    }) => unknown] | [{
        name?: string | undefined;
        tags?: string | undefined;
        timeout?: number | undefined;
    }, (this: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld, fixtures: T & W & {
        $bddWorld: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld;
        $tags: string[];
        $testInfo: import("@playwright/test").TestInfo;
    }) => unknown]) => void;
    After: (...args: [(this: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld, fixtures: T & W & {
        $bddWorld: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld;
        $tags: string[];
        $testInfo: import("@playwright/test").TestInfo;
    }) => unknown] | [string, (this: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld, fixtures: T & W & {
        $bddWorld: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld;
        $tags: string[];
        $testInfo: import("@playwright/test").TestInfo;
    }) => unknown] | [{
        name?: string | undefined;
        tags?: string | undefined;
        timeout?: number | undefined;
    }, (this: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld, fixtures: T & W & {
        $bddWorld: WorldFixtureName extends Exclude<keyof import("../playwright/types").Fixtures<T>, number | symbol | keyof import("../run/bddFixtures/types").BddFixtures | keyof import("@playwright/test").PlaywrightTestArgs | keyof import("@playwright/test").PlaywrightTestOptions | keyof import("@playwright/test").PlaywrightWorkerArgs | keyof import("@playwright/test").PlaywrightWorkerOptions> ? CustomFixtures<T>[WorldFixtureName] : CustomWorld;
        $tags: string[];
        $testInfo: import("@playwright/test").TestInfo;
    }) => unknown]) => void;
    BeforeAll: (...args: [(fixtures: W & {
        $workerInfo: import("@playwright/test").WorkerInfo;
    }) => unknown] | [{
        timeout?: number | undefined;
    }, (fixtures: W & {
        $workerInfo: import("@playwright/test").WorkerInfo;
    }) => unknown]) => void;
    AfterAll: (...args: [(fixtures: W & {
        $workerInfo: import("@playwright/test").WorkerInfo;
    }) => unknown] | [{
        timeout?: number | undefined;
    }, (fixtures: W & {
        $workerInfo: import("@playwright/test").WorkerInfo;
    }) => unknown]) => void;
};
export {};
//# sourceMappingURL=createBdd.d.ts.map
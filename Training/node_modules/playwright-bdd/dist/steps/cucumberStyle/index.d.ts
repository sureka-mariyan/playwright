/**
 * New cucumber-style steps where Given/When/Then are not imported from @cucumber/cucumber.
 * Instead they are imported as:
 * const { Given, When, Then } = createBdd(test, { worldFixture: 'world' });
 *
 * Internally they are explicitly added to supportCodeLibrary.stepDefinitions
 * in the same way as decorator steps. But step fn is bound to the world fixture,
 * no matter what world is provided by Cucumber.
 *
 * The goal of this is to allow usage of cucumber-style without explicitly importing
 * Give/When/Then from cucumber.
 */
import { ISupportCodeLibrary } from '../../cucumber/types';
import { StepConfig } from '../stepConfig';
import { GherkinStepKeyword } from '@cucumber/cucumber/lib/models/gherkin_step_keyword';
import { DefineStepPattern } from '@cucumber/cucumber/lib/support_code_library_builder/types';
export type CucumberStyleStepFn<World> = (this: World, ...args: any[]) => unknown;
export declare function cucumberStepCtor<StepFn extends StepConfig['fn']>(keyword: GherkinStepKeyword, worldFixture: string): (pattern: DefineStepPattern, fn: StepFn) => StepFn;
/**
 * Append steps to Cucumber's supportCodeLibrary.
 */
export declare function appendNewCucumberStyleSteps(supportCodeLibrary: ISupportCodeLibrary): void;
//# sourceMappingURL=index.d.ts.map
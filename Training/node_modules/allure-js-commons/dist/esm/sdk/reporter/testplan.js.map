{"version":3,"file":"testplan.js","names":["readFileSync","parseTestPlan","testPlanPath","process","env","ALLURE_TESTPLAN_PATH","undefined","file","testPlan","JSON","parse","tests","length","e"],"sources":["../../../../src/sdk/reporter/testplan.ts"],"sourcesContent":["import { readFileSync } from \"node:fs\";\nimport type { TestPlanV1 } from \"../types.js\";\n\nexport const parseTestPlan = (): TestPlanV1 | undefined => {\n  const testPlanPath = process.env.ALLURE_TESTPLAN_PATH;\n\n  if (!testPlanPath) {\n    return undefined;\n  }\n\n  try {\n    const file = readFileSync(testPlanPath, \"utf8\");\n    const testPlan = JSON.parse(file) as TestPlanV1;\n\n    // Execute all tests if test plan is empty\n    if ((testPlan.tests || []).length === 0) {\n      return undefined;\n    }\n\n    return testPlan;\n  } catch (e) {\n    return undefined;\n  }\n};\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,SAAS;AAGtC,OAAO,IAAMC,aAAa,GAAGA,CAAA,KAA8B;EACzD,IAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB;EAErD,IAAI,CAACH,YAAY,EAAE;IACjB,OAAOI,SAAS;EAClB;EAEA,IAAI;IACF,IAAMC,IAAI,GAAGP,YAAY,CAACE,YAAY,EAAE,MAAM,CAAC;IAC/C,IAAMM,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAAe;;IAE/C;IACA,IAAI,CAACC,QAAQ,CAACG,KAAK,IAAI,EAAE,EAAEC,MAAM,KAAK,CAAC,EAAE;MACvC,OAAON,SAAS;IAClB;IAEA,OAAOE,QAAQ;EACjB,CAAC,CAAC,OAAOK,CAAC,EAAE;IACV,OAAOP,SAAS;EAClB;AACF,CAAC","ignoreList":[]}
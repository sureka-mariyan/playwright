{"version":3,"file":"AllureContextProviderBase.js","names":["AllureContextProviderBase","constructor","_defineProperty","getCurrentContext","getScope","getFixture","getTest","_this$getFixture","root","resolvedRoot","getStepRoot","getStep","_this$getStep","uuid","update","b","addScope","removeScopeByUuid","removeScope","setFixture","removeFixture","setTest","removeTest","addStep","removeStep","load","get","fn","holder","store"],"sources":["../../../../../src/sdk/reporter/context/AllureContextProviderBase.ts"],"sourcesContent":["/* eslint brace-style: 0 */\nimport type { AllureContext, AllureContextHolder, AllureContextProvider } from \"./types.js\";\n\n/**\n * Provides the set of methods to access and update the context.\n * Successor classes are responsible for persisting and accessing the context.\n */\nexport abstract class AllureContextProviderBase<\n  TContext extends AllureContext,\n  THolder extends AllureContextHolder<TContext>,\n> implements AllureContextProvider\n{\n  /**\n   * Gets the holder that contains the current value of the context.\n   */\n  protected abstract load: () => THolder;\n\n  /**\n   * Persist the changes applied to the context since it was last time persisted.\n   */\n  protected abstract store: (holder: THolder) => void;\n\n  getScope = () => this.getCurrentContext().getScope();\n\n  getFixture = () => this.getCurrentContext().getFixture();\n\n  getTest = () => this.getCurrentContext().getTest();\n\n  getStepRoot = () => this.getFixture() ?? this.getTest();\n\n  getStep = (root?: string) => {\n    const resolvedRoot = root ?? this.getStepRoot();\n    if (resolvedRoot) {\n      return this.getCurrentContext().getStep(resolvedRoot);\n    }\n    return null;\n  };\n\n  getExecutingItem = (root?: string) => {\n    const resolvedRoot = root ?? this.getStepRoot();\n    if (resolvedRoot) {\n      return this.getStep(resolvedRoot) ?? resolvedRoot;\n    }\n    return null;\n  };\n\n  addScope = (uuid: string) => this.update((b) => b.addScope(uuid));\n\n  removeScope = (uuid?: string) => this.update((b) => (uuid ? b.removeScopeByUuid(uuid) : b.removeScope()));\n\n  setFixture = (uuid: string) => this.update((b) => b.setFixture(uuid));\n\n  removeFixture = (uuid?: string) => {\n    if (!uuid || this.getFixture() === uuid) {\n      this.update((b) => b.removeFixture());\n    }\n  };\n\n  setTest = (uuid: string) => this.update((b) => b.setTest(uuid));\n\n  removeTest = (uuid?: string) => {\n    if (!uuid || this.getTest() === uuid) {\n      this.update((b) => b.removeTest());\n    }\n  };\n\n  addStep = (uuid: string, root?: string) => {\n    const resolvedRoot = root ?? this.getStepRoot();\n    if (resolvedRoot) {\n      this.update((b) => b.addStep(resolvedRoot, uuid));\n    }\n  };\n\n  removeStep = (root?: string) => {\n    const resolvedRoot = root ?? this.getStepRoot();\n    if (resolvedRoot) {\n      this.update((b) => b.removeStep(resolvedRoot));\n    }\n  };\n\n  private getCurrentContext = () => this.load().get();\n\n  private update = (fn: (holder: THolder) => void) => {\n    const holder = this.load();\n    fn(holder);\n    this.store(holder);\n  };\n}\n"],"mappings":"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","ignoreList":[]}
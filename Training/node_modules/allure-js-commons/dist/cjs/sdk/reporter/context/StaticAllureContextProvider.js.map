{"version":3,"file":"StaticAllureContextProvider.js","names":["_AllureContextProviderBase","require","_StaticContextProvider","_defineProperty","e","r","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","MutableAllureContext","constructor","Map","last","scopeStack","currentFixture","currentTest","scope","stepStacks","get","exports","arr","_arr","length","MutableAllureContextHolder","context","uuid","push","pop","removeAllOccurrences","steps","set","delete","val","indexOf","splice","StaticContextProvider","AllureContextProviderBase","holderSingleton","holder","is","Error"],"sources":["../../../../../src/sdk/reporter/context/StaticAllureContextProvider.ts"],"sourcesContent":["import { AllureContextProviderBase } from \"./AllureContextProviderBase.js\";\nimport type { AllureContext, AllureContextHolder } from \"./types.js\";\n\n/**\n * Allure context that stores its data in mutable class fields.\n * Unsafe from the cuncurrency standpoint.\n */\nexport class MutableAllureContext implements AllureContext {\n  readonly scopeStack: string[] = [];\n  currentFixture: string | null = null;\n  currentTest: string | null = null;\n  readonly stepStacks: Map<string, string[]> = new Map();\n\n  getScope = () => MutableAllureContext.last(this.scopeStack);\n  getFixture = () => this.currentFixture;\n  getTest = () => this.currentTest;\n  getStep = (scope: string) => MutableAllureContext.last(this.stepStacks.get(scope));\n\n  private static last = <T>(arr: T[] | undefined) => arr?.[arr.length - 1] ?? null;\n}\n\n/**\n * Implements transitioning between context values by mutating the context\n * object.\n * Unsafe from the cuncurrency standpoint.\n */\nexport class MutableAllureContextHolder implements AllureContextHolder<MutableAllureContext> {\n  private readonly context: MutableAllureContext = new MutableAllureContext();\n\n  get = () => this.context;\n\n  addScope = (uuid: string) => {\n    this.context.scopeStack.push(uuid);\n  };\n\n  removeScope = () => {\n    this.context.scopeStack.pop();\n  };\n\n  removeScopeByUuid = (uuid: string) => MutableAllureContextHolder.removeAllOccurrences(this.context.scopeStack, uuid);\n\n  setFixture = (uuid: string) => {\n    this.context.currentFixture = uuid;\n  };\n\n  removeFixture = () => {\n    this.context.currentFixture = null;\n  };\n\n  setTest = (uuid: string) => {\n    this.context.currentTest = uuid;\n  };\n\n  removeTest = () => {\n    this.context.currentTest = null;\n  };\n\n  addStep = (scope: string, uuid: string) => {\n    const steps = this.context.stepStacks.get(scope);\n    if (steps) {\n      steps.push(uuid);\n    } else {\n      this.context.stepStacks.set(scope, [uuid]);\n    }\n  };\n\n  removeStep = (scope: string) => {\n    const steps = this.context.stepStacks.get(scope);\n    if (steps) {\n      steps.pop();\n      if (!steps.length) {\n        this.context.stepStacks.delete(scope);\n      }\n    }\n  };\n\n  removeStepByUuid = (scope: string, uuid: string) => {\n    const steps = this.context.stepStacks.get(scope);\n    if (steps) {\n      MutableAllureContextHolder.removeAllOccurrences(steps, uuid);\n      if (!steps.length) {\n        this.context.stepStacks.delete(scope);\n      }\n    }\n  };\n\n  private static removeAllOccurrences<T>(arr: T[], val: T) {\n    for (let i = arr.indexOf(val); i !== -1; i = arr.indexOf(val, i)) {\n      arr.splice(i, 1);\n    }\n  }\n}\n\n/**\n * Stores the context in a class field. That's a simple but not async-safe way of\n * manipulating the context.\n */\nexport class StaticContextProvider<\n  TContext extends AllureContext,\n  THolder extends AllureContextHolder<TContext>,\n> extends AllureContextProviderBase<TContext, THolder> {\n  constructor(private readonly holderSingleton: THolder) {\n    super();\n  }\n\n  protected override load = () => this.holderSingleton;\n\n  /* The changes are already persisted in the holder singleton. */\n  protected store = (holder: THolder) => {\n    if (!Object.is(holder, this.holderSingleton)) {\n      throw new Error(\"The static context holder can'be replaced with another one.\");\n    }\n  };\n\n  /**\n   * Wraps a context holder singleton in the static context provider.\n   * @param holderSingleton The singleton to wrap.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  static wrap = <TContext extends AllureContext, THolder extends AllureContextHolder<TContext>>(\n    holderSingleton: THolder,\n  ) => new StaticContextProvider<TContext, THolder>(holderSingleton);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,0BAAA,GAAAC,OAAA;AAA2E,IAAAC,sBAAA;AAAA,SAAAC,gBAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,YAAAD,CAAA,GAAAE,cAAA,CAAAF,CAAA,MAAAD,CAAA,GAAAI,MAAA,CAAAC,cAAA,CAAAL,CAAA,EAAAC,CAAA,IAAAK,KAAA,EAAAJ,CAAA,EAAAK,UAAA,MAAAC,YAAA,MAAAC,QAAA,UAAAT,CAAA,CAAAC,CAAA,IAAAC,CAAA,EAAAF,CAAA;AAAA,SAAAG,eAAAD,CAAA,QAAAQ,CAAA,GAAAC,YAAA,CAAAT,CAAA,uCAAAQ,CAAA,GAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAC,aAAAT,CAAA,EAAAD,CAAA,2BAAAC,CAAA,KAAAA,CAAA,SAAAA,CAAA,MAAAF,CAAA,GAAAE,CAAA,CAAAU,MAAA,CAAAC,WAAA,kBAAAb,CAAA,QAAAU,CAAA,GAAAV,CAAA,CAAAc,IAAA,CAAAZ,CAAA,EAAAD,CAAA,uCAAAS,CAAA,SAAAA,CAAA,YAAAK,SAAA,yEAAAd,CAAA,GAAAe,MAAA,GAAAC,MAAA,EAAAf,CAAA;AAG3E;AACA;AACA;AACA;AACO,MAAMgB,oBAAoB,CAA0B;EAAAC,YAAA;IAAApB,eAAA,qBACzB,EAAE;IAAAA,eAAA,yBACF,IAAI;IAAAA,eAAA,sBACP,IAAI;IAAAA,eAAA,qBACY,IAAIqB,GAAG,CAAC,CAAC;IAAArB,eAAA,mBAE3C,MAAMmB,oBAAoB,CAACG,IAAI,CAAC,IAAI,CAACC,UAAU,CAAC;IAAAvB,eAAA,qBAC9C,MAAM,IAAI,CAACwB,cAAc;IAAAxB,eAAA,kBAC5B,MAAM,IAAI,CAACyB,WAAW;IAAAzB,eAAA,kBACrB0B,KAAa,IAAKP,oBAAoB,CAACG,IAAI,CAAC,IAAI,CAACK,UAAU,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAAA;AAGpF;;AAEA;AACA;AACA;AACA;AACA;AAJAG,OAAA,CAAAV,oBAAA,GAAAA,oBAAA;AAAAnB,eAAA,CAdamB,oBAAoB,UAWLW,GAAoB;EAAA,IAAAC,IAAA;EAAA,QAAAA,IAAA,GAAKD,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAGA,GAAG,CAACE,MAAM,GAAG,CAAC,CAAC,cAAAD,IAAA,cAAAA,IAAA,GAAI,IAAI;AAAA;AAQ3E,MAAME,0BAA0B,CAAsD;EAAAb,YAAA;IAAApB,eAAA,kBAC1C,IAAImB,oBAAoB,CAAC,CAAC;IAAAnB,eAAA,cAErE,MAAM,IAAI,CAACkC,OAAO;IAAAlC,eAAA,mBAEZmC,IAAY,IAAK;MAC3B,IAAI,CAACD,OAAO,CAACX,UAAU,CAACa,IAAI,CAACD,IAAI,CAAC;IACpC,CAAC;IAAAnC,eAAA,sBAEa,MAAM;MAClB,IAAI,CAACkC,OAAO,CAACX,UAAU,CAACc,GAAG,CAAC,CAAC;IAC/B,CAAC;IAAArC,eAAA,4BAEoBmC,IAAY,IAAKF,0BAA0B,CAACK,oBAAoB,CAAC,IAAI,CAACJ,OAAO,CAACX,UAAU,EAAEY,IAAI,CAAC;IAAAnC,eAAA,qBAEtGmC,IAAY,IAAK;MAC7B,IAAI,CAACD,OAAO,CAACV,cAAc,GAAGW,IAAI;IACpC,CAAC;IAAAnC,eAAA,wBAEe,MAAM;MACpB,IAAI,CAACkC,OAAO,CAACV,cAAc,GAAG,IAAI;IACpC,CAAC;IAAAxB,eAAA,kBAEUmC,IAAY,IAAK;MAC1B,IAAI,CAACD,OAAO,CAACT,WAAW,GAAGU,IAAI;IACjC,CAAC;IAAAnC,eAAA,qBAEY,MAAM;MACjB,IAAI,CAACkC,OAAO,CAACT,WAAW,GAAG,IAAI;IACjC,CAAC;IAAAzB,eAAA,kBAES,CAAC0B,KAAa,EAAES,IAAY,KAAK;MACzC,IAAMI,KAAK,GAAG,IAAI,CAACL,OAAO,CAACP,UAAU,CAACC,GAAG,CAACF,KAAK,CAAC;MAChD,IAAIa,KAAK,EAAE;QACTA,KAAK,CAACH,IAAI,CAACD,IAAI,CAAC;MAClB,CAAC,MAAM;QACL,IAAI,CAACD,OAAO,CAACP,UAAU,CAACa,GAAG,CAACd,KAAK,EAAE,CAACS,IAAI,CAAC,CAAC;MAC5C;IACF,CAAC;IAAAnC,eAAA,qBAEa0B,KAAa,IAAK;MAC9B,IAAMa,KAAK,GAAG,IAAI,CAACL,OAAO,CAACP,UAAU,CAACC,GAAG,CAACF,KAAK,CAAC;MAChD,IAAIa,KAAK,EAAE;QACTA,KAAK,CAACF,GAAG,CAAC,CAAC;QACX,IAAI,CAACE,KAAK,CAACP,MAAM,EAAE;UACjB,IAAI,CAACE,OAAO,CAACP,UAAU,CAACc,MAAM,CAACf,KAAK,CAAC;QACvC;MACF;IACF,CAAC;IAAA1B,eAAA,2BAEkB,CAAC0B,KAAa,EAAES,IAAY,KAAK;MAClD,IAAMI,KAAK,GAAG,IAAI,CAACL,OAAO,CAACP,UAAU,CAACC,GAAG,CAACF,KAAK,CAAC;MAChD,IAAIa,KAAK,EAAE;QACTN,0BAA0B,CAACK,oBAAoB,CAACC,KAAK,EAAEJ,IAAI,CAAC;QAC5D,IAAI,CAACI,KAAK,CAACP,MAAM,EAAE;UACjB,IAAI,CAACE,OAAO,CAACP,UAAU,CAACc,MAAM,CAACf,KAAK,CAAC;QACvC;MACF;IACF,CAAC;EAAA;EAED,OAAeY,oBAAoBA,CAAIR,GAAQ,EAAEY,GAAM,EAAE;IACvD,KAAK,IAAI/B,CAAC,GAAGmB,GAAG,CAACa,OAAO,CAACD,GAAG,CAAC,EAAE/B,CAAC,KAAK,CAAC,CAAC,EAAEA,CAAC,GAAGmB,GAAG,CAACa,OAAO,CAACD,GAAG,EAAE/B,CAAC,CAAC,EAAE;MAChEmB,GAAG,CAACc,MAAM,CAACjC,CAAC,EAAE,CAAC,CAAC;IAClB;EACF;AACF;;AAEA;AACA;AACA;AACA;AAHAkB,OAAA,CAAAI,0BAAA,GAAAA,0BAAA;AAIO,MAAMY,qBAAqB,SAGxBC,oDAAyB,CAAoB;EACrD1B,WAAWA,CAAkB2B,eAAwB,EAAE;IACrD,KAAK,CAAC,CAAC;IAAC,KADmBA,eAAwB,GAAxBA,eAAwB;IAAA/C,eAAA,eAI3B,MAAM,IAAI,CAAC+C,eAAe;IAEpD;IAAA/C,eAAA,gBACmBgD,MAAe,IAAK;MACrC,IAAI,CAAC3C,MAAM,CAAC4C,EAAE,CAACD,MAAM,EAAE,IAAI,CAACD,eAAe,CAAC,EAAE;QAC5C,MAAM,IAAIG,KAAK,CAAC,6DAA6D,CAAC;MAChF;IACF,CAAC;EATD;AAmBF;AAACrB,OAAA,CAAAgB,qBAAA,GAAAA,qBAAA;AAAA9C,sBAAA,GAzBY8C,qBAAqB;AAiBhC;AACF;AACA;AACA;AACE;AAAA7C,eAAA,CArBW6C,qBAAqB,UAuB9BE,eAAwB,IACrB,IAAIF,sBAAqB,CAAoBE,eAAe,CAAC","ignoreList":[]}
{"version":3,"file":"utils.js","names":["_promises","require","_nodeCrypto","_nodeFs","_interopRequireDefault","_nodePath","_nodeProcess","_properties","_model","e","__esModule","default","asyncGeneratorStep","n","t","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","randomUuid","randomUUID","exports","md5","str","createHash","update","digest","getTestResultHistoryId","result","_result$testCaseId","historyId","tcId","testCaseId","fullName","paramsString","parameters","filter","p","excluded","sort","b","_a$name","_a$value","name","localeCompare","map","_p$name","_p$value","concat","join","paramsHash","getTestResultTestCaseId","undefined","getWorstStepResultStatusPriority","steps","priority","worstStatusPriority","forEach","step","_step$steps","length","stepStatusPriority","status","StatusByPriority","indexOf","getWorstStepResultStatus","readImageAsBase64","_ref","filePath","file","readFile","encoding","_x","getProjectRoot","cachedProjectRoot","resolveProjectRootByPath","cwd","process","nextDir","dir","fs","accessSync","path","constants","F_OK","_unused","dirname","getRelativePath","filepath","isAbsolute","projectRoot","relative","getPackageLabelFromPath","LabelName","PACKAGE","split","sep","v","deepClone","obj","JSON","parse","stringify","serialize","val","Map","Set","toString","getSuiteLabels","suites","parentSuite","suite","subSuites","labels","push","PARENT_SUITE","SUITE","SUB_SUITE","suiteLabelNames","ensureSuiteLabels","test","defaultSuites","_test$labels","find","l","includes","_test$labels2","reRegExpChar","reHasRegExpChar","RegExp","source","escapeRegExp","replace","parseProperties","properties","stringifyProperties"],"sources":["../../../../src/sdk/reporter/utils.ts"],"sourcesContent":["import { readFile } from \"fs/promises\";\nimport { createHash, randomUUID } from \"node:crypto\";\nimport fs from \"node:fs\";\nimport path from \"node:path\";\nimport process from \"node:process\";\nimport properties from \"properties\";\nimport type { Status, StepResult, TestResult } from \"../../model.js\";\nimport { LabelName, StatusByPriority } from \"../../model.js\";\nimport type { Label } from \"../../model.js\";\n\nexport const randomUuid = () => {\n  return randomUUID();\n};\n\nexport const md5 = (str: string) => {\n  return createHash(\"md5\").update(str).digest(\"hex\");\n};\n\nexport const getTestResultHistoryId = (result: TestResult) => {\n  if (result.historyId) {\n    return result.historyId;\n  }\n\n  const tcId = result.testCaseId ?? (result.fullName ? md5(result.fullName) : null);\n\n  if (!tcId) {\n    return \"\";\n  }\n\n  const paramsString = result.parameters\n    .filter((p) => !p?.excluded)\n    .sort((a, b) => a.name?.localeCompare(b?.name) || a.value?.localeCompare(b?.value))\n    .map((p) => `${p.name ?? \"null\"}:${p.value ?? \"null\"}`)\n    .join(\",\");\n  const paramsHash = md5(paramsString);\n\n  return `${tcId}:${paramsHash}`;\n};\n\nexport const getTestResultTestCaseId = (result: TestResult) => {\n  return result.fullName ? md5(result.fullName) : undefined;\n};\n\nexport const getWorstStepResultStatusPriority = (steps: StepResult[], priority?: number): number | undefined => {\n  let worstStatusPriority = priority;\n\n  steps.forEach((step) => {\n    if (step.steps?.length) {\n      worstStatusPriority = getWorstStepResultStatusPriority(step.steps, worstStatusPriority);\n    }\n\n    const stepStatusPriority = step.status ? StatusByPriority.indexOf(step.status) : undefined;\n\n    if (stepStatusPriority === undefined) {\n      return;\n    }\n\n    if (worstStatusPriority === undefined) {\n      worstStatusPriority = stepStatusPriority;\n      return;\n    }\n\n    if (stepStatusPriority >= worstStatusPriority) {\n      return;\n    }\n\n    worstStatusPriority = stepStatusPriority;\n  });\n\n  return worstStatusPriority;\n};\n\nexport const getWorstStepResultStatus = (steps: StepResult[]): Status | undefined => {\n  const worstStatusPriority = getWorstStepResultStatusPriority(steps);\n\n  if (worstStatusPriority === undefined) {\n    return undefined;\n  }\n\n  return StatusByPriority[worstStatusPriority];\n};\n\nexport const readImageAsBase64 = async (filePath: string): Promise<string | undefined> => {\n  try {\n    const file = await readFile(filePath, { encoding: \"base64\" });\n\n    return file ? `data:image/png;base64,${file}` : undefined;\n  } catch (e) {\n    return undefined;\n  }\n};\n\nconst getProjectRoot = (() => {\n  let cachedProjectRoot: string | null = null;\n\n  const resolveProjectRootByPath = () => {\n    const cwd = process.cwd();\n    let nextDir = cwd;\n    let dir;\n\n    do {\n      dir = nextDir;\n      try {\n        fs.accessSync(path.join(dir, \"package.json\"), fs.constants.F_OK);\n\n        // package.json exists; use the directory as the project root\n        return dir;\n      } catch {}\n\n      nextDir = path.dirname(dir);\n    } while (nextDir.length < dir.length);\n\n    // package.json doesn't exist in any parent; fall back to CWD\n    return cwd;\n  };\n\n  return () => {\n    if (!cachedProjectRoot) {\n      cachedProjectRoot = resolveProjectRootByPath();\n    }\n    return cachedProjectRoot;\n  };\n})();\n\nexport const getRelativePath = (filepath: string) => {\n  if (path.isAbsolute(filepath)) {\n    const projectRoot = getProjectRoot();\n    filepath = path.relative(projectRoot, filepath);\n  }\n  return filepath;\n};\n\nexport const getPackageLabelFromPath = (filepath: string): Label => ({\n  name: LabelName.PACKAGE,\n  value: getRelativePath(filepath)\n    .split(path.sep)\n    .filter((v) => v)\n    .join(\".\"),\n});\n\nexport const deepClone = <T>(obj: T): T => JSON.parse(JSON.stringify(obj));\n\nexport const serialize = (val: unknown): string => {\n  if (typeof val === \"object\" && !(val instanceof Map || val instanceof Set)) {\n    return JSON.stringify(val);\n  }\n\n  if (val === undefined) {\n    return \"undefined\";\n  }\n\n  return (val as any).toString();\n};\n\nexport const getSuiteLabels = (suites: readonly string[]): Label[] => {\n  if (suites.length === 0) {\n    return [];\n  }\n\n  const [parentSuite, suite, ...subSuites] = suites;\n  const labels: Label[] = [];\n\n  if (parentSuite) {\n    labels.push({\n      name: LabelName.PARENT_SUITE,\n      value: parentSuite,\n    });\n  }\n\n  if (suite) {\n    labels.push({\n      name: LabelName.SUITE,\n      value: suite,\n    });\n  }\n\n  if (subSuites.length > 0) {\n    labels.push({\n      name: LabelName.SUB_SUITE,\n      value: subSuites.join(\" > \"),\n    });\n  }\n\n  return labels;\n};\n\nconst suiteLabelNames: readonly string[] = [LabelName.PARENT_SUITE, LabelName.SUITE, LabelName.SUB_SUITE];\n\nexport const ensureSuiteLabels = (test: Partial<TestResult>, defaultSuites: readonly string[]) => {\n  if (!test.labels?.find((l) => suiteLabelNames.includes(l.name))) {\n    test.labels = [...(test.labels ?? []), ...getSuiteLabels(defaultSuites)];\n  }\n};\n\nconst reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n  reHasRegExpChar = RegExp(reRegExpChar.source);\n\nexport const escapeRegExp = (value: string): string => {\n  return reHasRegExpChar.test(value) ? value.replace(reRegExpChar, \"\\\\$&\") : value;\n};\n\nexport const parseProperties = properties.parse;\nexport const stringifyProperties = properties.stringify;\n"],"mappings":"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","ignoreList":[]}
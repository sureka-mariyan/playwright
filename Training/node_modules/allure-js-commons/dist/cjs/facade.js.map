{"version":3,"file":"facade.js","names":["_model","require","_runtime","_utils","callRuntimeMethod","method","_len","arguments","length","args","Array","_key","runtime","getGlobalTestRuntimeWithAutoconfig","isPromise","then","testRuntime","label","name","value","exports","labels","_len2","labelsList","_key2","link","url","type","links","_len3","linksList","_key3","parameter","options","description","markdown","descriptionHtml","html","displayName","historyId","testCaseId","attachment","content","opts","contentType","attachmentPath","path","stepContext","mode","step","body","issue","LinkType","ISSUE","tms","TMS","allureId","LabelName","ALLURE_ID","epic","EPIC","feature","FEATURE","story","STORY","suite","SUITE","parentSuite","PARENT_SUITE","subSuite","SUB_SUITE","owner","OWNER","severity","SEVERITY","layer","LAYER","tag","TAG","tags","_len4","tagsList","_key4","map"],"sources":["../../src/facade.ts"],"sourcesContent":["import type { ContentType } from \"./model.js\";\nimport { type AttachmentOptions, type Label, type Link, type ParameterMode, type ParameterOptions } from \"./model.js\";\nimport { LabelName, LinkType } from \"./model.js\";\nimport { getGlobalTestRuntimeWithAutoconfig } from \"./sdk/runtime/runtime.js\";\nimport type { TestRuntime } from \"./sdk/runtime/types.js\";\nimport { isPromise } from \"./sdk/utils.js\";\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype ArgumentTypes<F extends Function> = F extends (...args: infer A) => any ? A : never;\nconst callRuntimeMethod = <T extends keyof TestRuntime, S extends ArgumentTypes<TestRuntime[T]>>(\n  method: T,\n  ...args: S\n) => {\n  const runtime = getGlobalTestRuntimeWithAutoconfig();\n\n  if (!isPromise(runtime)) {\n    // @ts-ignore\n    return (runtime as TestRuntime)[method](...args);\n  }\n\n  return (runtime as Promise<TestRuntime>).then((testRuntime) => {\n    // @ts-ignore\n    return testRuntime[method](...args);\n  });\n};\n\nexport const label = (name: LabelName | string, value: string) => {\n  return callRuntimeMethod(\"labels\", { name, value });\n};\n\nexport const labels = (...labelsList: Label[]) => {\n  return callRuntimeMethod(\"labels\", ...labelsList);\n};\n\nexport const link = (url: string, name?: string, type?: LinkType | string) => {\n  return callRuntimeMethod(\"links\", { url, type, name });\n};\n\nexport const links = (...linksList: Link[]) => {\n  return callRuntimeMethod(\"links\", ...linksList);\n};\n\nexport const parameter = (name: string, value: string, options?: ParameterOptions) => {\n  return callRuntimeMethod(\"parameter\", name, value, options);\n};\n\nexport const description = (markdown: string) => {\n  return callRuntimeMethod(\"description\", markdown);\n};\n\nexport const descriptionHtml = (html: string) => {\n  return callRuntimeMethod(\"descriptionHtml\", html);\n};\n\nexport const displayName = (name: string) => {\n  return callRuntimeMethod(\"displayName\", name);\n};\n\nexport const historyId = (value: string) => {\n  return callRuntimeMethod(\"historyId\", value);\n};\n\nexport const testCaseId = (value: string) => {\n  return callRuntimeMethod(\"testCaseId\", value);\n};\n\nexport const attachment = (\n  name: string,\n  content: Buffer | string,\n  options: ContentType | string | AttachmentOptions,\n) => {\n  const opts = typeof options === \"string\" ? { contentType: options } : options;\n  return callRuntimeMethod(\"attachment\", name, content, opts);\n};\n\nexport const attachmentPath = (\n  name: string,\n  path: string,\n  options: ContentType | string | Omit<AttachmentOptions, \"encoding\">,\n) => {\n  const opts = typeof options === \"string\" ? { contentType: options } : options;\n  return callRuntimeMethod(\"attachmentFromPath\", name, path, opts);\n};\n\nexport type StepContext = {\n  displayName: (name: string) => void | PromiseLike<void>;\n  parameter: (name: string, value: string, mode?: ParameterMode) => void | PromiseLike<void>;\n};\n\nconst stepContext: () => StepContext = () => ({\n  displayName: (name: string) => {\n    return callRuntimeMethod(\"stepDisplayName\", name);\n  },\n  parameter: (name, value, mode?) => {\n    return callRuntimeMethod(\"stepParameter\", name, value, mode);\n  },\n});\n\nexport const step = <T = void>(name: string, body: (context: StepContext) => T | PromiseLike<T>) => {\n  return callRuntimeMethod(\"step\", name, () => body(stepContext()));\n};\n\nexport const issue = (url: string, name?: string) => link(url, name, LinkType.ISSUE);\n\nexport const tms = (url: string, name?: string) => link(url, name, LinkType.TMS);\n\nexport const allureId = (value: string) => label(LabelName.ALLURE_ID, value);\n\nexport const epic = (name: string) => label(LabelName.EPIC, name);\n\nexport const feature = (name: string) => label(LabelName.FEATURE, name);\n\nexport const story = (name: string) => label(LabelName.STORY, name);\n\nexport const suite = (name: string) => label(LabelName.SUITE, name);\n\nexport const parentSuite = (name: string) => label(LabelName.PARENT_SUITE, name);\n\nexport const subSuite = (name: string) => label(LabelName.SUB_SUITE, name);\n\nexport const owner = (name: string) => label(LabelName.OWNER, name);\n\nexport const severity = (name: string) => label(LabelName.SEVERITY, name);\n\nexport const layer = (name: string) => label(LabelName.LAYER, name);\n\nexport const tag = (name: string) => label(LabelName.TAG, name);\n\nexport const tags = (...tagsList: string[]) => {\n  return callRuntimeMethod(\"labels\", ...tagsList.map((value) => ({ name: LabelName.TAG, value })));\n};\n"],"mappings":"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","ignoreList":[]}